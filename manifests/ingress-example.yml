---
kind: Namespace
apiVersion: v1
metadata:
  name: oci-lb-ingress-example

---
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: ingress-example-tls-cert
  namespace: oci-lb-ingress-example
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWVENDQWoyZ0F3SUJBZ0lVZE4yODU3d1VLUE9SVUJ1d0JiOVIrME8vbzJFd0RRWUpLb1pJaHZjTkFRRUwKQlFBd09qRVhNQlVHQTFVRUF3d09LaTVsZUdGdGNHeGxMblJsYzNReEh6QWRCZ05WQkFvTUZtOWphUzFzWWkxcApibWR5WlhOekxXVjRZVzF3YkdVd0hoY05Nakl3TkRJek1EZ3lOalF5V2hjTk1qWXdOREl5TURneU5qUXlXakE2Ck1SY3dGUVlEVlFRRERBNHFMbVY0WVcxd2JHVXVkR1Z6ZERFZk1CMEdBMVVFQ2d3V2IyTnBMV3hpTFdsdVozSmwKYzNNdFpYaGhiWEJzWlRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTDdxalNFSwowZmE2K2FhTk1SZmVUcmc5U2VaQVhWUHIwbVRFM2lKMlRLaXY1dlIzeXlNemRtRW9iVTl5cWpTcHMwRUphTE1BCm9tUjRmUG02czdoeEJFUnhJTG1qZHRSdElUQjYrazJhTVA2cEY3WkZIU2I2RWhtYWlmNzhRbk5aWWpwbVpsTDUKSzNEMUhaTldCQXpXVmhxOElqdnZ0R3ArTStFK1M4VXBqOTU3Und5VC9lZG5ETzNEbzFRUkpZV0RtclZBK21IYwo3QjYxankwdlhnbFlEbWp3cjc2bmRXVTlud2xVajVhcElaQnpSUTNxQ2t6bDQvaW5yNWdhNUF6WFNzaXlzN1BOCkk4eENieW14SGhnRFBkdkc4bzAzV2R1QjZmQklyeTRlb09uZlczSHNvajI5amt5SVpOYlJwZ1VEbW1Oc1EzbHAKdnlJRkxEZC83N2tkVTNzQ0F3RUFBYU5UTUZFd0hRWURWUjBPQkJZRUZQTXAwNVdUTitGNkp3WnQ5ODlGUk9DSQpTanhCTUI4R0ExVWRJd1FZTUJhQUZQTXAwNVdUTitGNkp3WnQ5ODlGUk9DSVNqeEJNQThHQTFVZEV3RUIvd1FGCk1BTUJBZjh3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUVZL0x6V0pqTkM4a2QvZDlwaG5uc2JWemxqQ1lhZDQKeTRtR21kVVo2NWpqOTlxQ3EvemhxL082ZDkvUHk1MnBDTDlVVjMxdjdJU2p1N1Q2ZjZZa2pMTjZuODlRT1NIaApEWHBXUWxmL1JwMi9sMEtpNHNxZjZQdkxCSXlhMXNwMVU5SEE5NmpPV1lGdFVsdVVHN2Qvd2toa0tKQkZRbVJLCmZmelcxQmVoSFpLMTByQVFIK0FKeGxGMWRtWUt6MlllcDFQVUQ2YnpZT0g4RVg5Mkd1TTJDM1g2WXBqcnB6TEoKQk5RVVZUa1FWbHdEc3kxVEs2dHBKZUpvMjJEK2k2MjBoS0RKcUhzVjdDblkvcUR2MDJ1ajhxdzJ5Wk96Skh3LwpYRWJSYVBUckJWTnZBRjkzcXIyRENLR0pHWjFPU1dkZ1lPK241Yk5hckc0VzBvWEN2c0pLS2V3PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRQys2bzBoQ3RIMnV2bW0KalRFWDNrNjRQVW5tUUYxVDY5Smt4TjRpZGt5b3IrYjBkOHNqTTNaaEtHMVBjcW8wcWJOQkNXaXpBS0prZUh6NQp1ck80Y1FSRWNTQzVvM2JVYlNFd2V2cE5takQrcVJlMlJSMG0raElabW9uKy9FSnpXV0k2Wm1aUytTdHc5UjJUClZnUU0xbFlhdkNJNzc3UnFmalBoUGt2RktZL2VlMGNNay8zblp3enR3Nk5VRVNXRmc1cTFRUHBoM093ZXRZOHQKTDE0SldBNW84SysrcDNWbFBaOEpWSStXcVNHUWMwVU42Z3BNNWVQNHA2K1lHdVFNMTBySXNyT3p6U1BNUW04cApzUjRZQXozYnh2S05OMW5iZ2Vud1NLOHVIcURwMzF0eDdLSTl2WTVNaUdUVzBhWUZBNXBqYkVONWFiOGlCU3czCmYrKzVIVk43QWdNQkFBRUNnZ0VBRVdpaDVkbHV1K2pneXVjbEN1QWluWG81T3QyenBPdGtDL3hIcFN6VVlLMXAKaWZGQ2ZMczhtQzl2aUVjVWJpanJSNHJzR1NaOXFGdTBTYkZVb2dUc05yRjZJbk5kYXBGbzdWckphRG9mTFptTgpwL2sxWjFCMlJnOXBkZTdhd0ZudU14VVRUNDJaQUh2WmJvM3hZSnBLejdWSUNkOFp2SHcxanR4M1hFc2w2MHQ1Cis2ZGgvNjBTYTlCc0Z3MWNOQ3A4Wko2Q2M2QlVPd1ZDYW9hZkt2eFNsLzNWaHBMeFZzbkZzOFZFbE5lcjNVYlkKWTFvSUVocGx0aTA4T1lzVzMvd1IwM1AzNUFSaVE5Zk1MUXh5NU1nV0YwbmdmcGxyZ3dSVGYyNHJObDB3SE1BTAp3WU0zYm1IMEdkUmJ4dHNaZThRMzlMRzd0b1lBVnc4R0ExaXp6MUx2UVFLQmdRRHg3TE9rQVBRMDZJMnR1S3lnCnVxd2hlUllidkZEK01wekVHTHVGaU1RODhZYlJRd1JNRk50S1Y5cURzMmk0ZHdtS1phRks2VGx5OVpiN01BOTIKeDZTbml6UktEck40QUlwdTlpYXFpZThGV0dmN1Y3bnM4OWdpZFcvdzZXWFM2YUVyUGFTT0puVHk1ai9ua0l4TQovSCt1dWkzbXRzQk1iQVYyamQ1a21WcUY1UUtCZ1FES0JoMXovR3ZtWUQrUEtUWEZmNEMrMTZGOE12YmI5VWs1CmNKaHhSNG43eHVjUC9IbGE3cFNFRjNtd1M1Z2N6cFpoZGMyUithd2JUN1JxRjRuZDQyYW1zQTB0VkdHMmFPNTkKYkdjbnc4R0JpVExFSUNrSG5mMGV0V0N1L3NzSWhUU1NKcDRPaWdlNnhDb1hXb25mdzdydnZBVWRBYVZpWXhkNwpUU2ZyYkR6ZDN3S0JnRTRUeFhwVnNIcnUzdUxGS2ptSlpZbzhDUTJVZmxNN3hHcHBUUVB3dXR5c1dvVm82cGNmCldCS3JQZU9wWUUvQVl6emVSZXJtVUZzd3RiU0ZzMGZ6Y01sOTNMZFYvVWZxYk1NWkFDdWo3cGM4Qy9zTE9mOG0KUjRmL2ZNdzBsMTgxZFlWK0ZJQ29HckJWN1NQdis4ZlE2ZWhiUC9zbzJmRVFIOGMrVEJzTmZ6Q2RBb0dBQ0k2cAp3TGY0ZWhHcG40N0hVRTVPVGNja2QvWlFycEI5UVltYmEzRDBUMDNsaTYvT0ZDUDI5b0ZvRGllbGtkTE9XK0o1CmlxMWd0T2R6Wk9zS1UvUEY3Vm1YdFV2VnQ3eEtIZFh4cUtXS0ZNcVM4K3ZJMFNISUR2enYwM25IYjl6MGxSdzkKcGJBREU4NHJXa0hqaFM3dFJDcGFyUmZjd1lZaEFJQU1LTlMwMzFFQ2dZRUFuUUpQQzF6aXp1emhmRWNLdGY3RgpFZDF1ZlBHL2hmbERwWnJ3S1dERGF5UDhTTFZqUEpNUTN4MkNrZ05acTJlZWdPZG5sTVExWDJLUWZmblF0WUNiClptMnBiMXZkVWhGSXdBaUFRQUVuUEFhd2g2ZUMyOHBqMUlybWNIdjRoQXNiZUF1SWxLWWJtUXZOd2pzTE5DU0wKVk9zaUFNbTZRc01mQmpGNGF1S1ROK0U9Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-configs
  namespace: oci-lb-ingress-example
data:
  default.conf: |
    server {
        listen       80;
        server_name  "";
        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }
        error_page  404              /404.html;
    }
  green-index.html: |
    <head>
        <title>Nginx green</title>
        <style> body { font-family: monospace; background-color: #9F9; color: #333; } </style>
    </head>
    <body>
        <h1>Green Application is working! ðŸ’š</h1>
    </body>
    </html>
  green-404.html: |
    <head>
        <title>Nginx green - PAGE NOT FOUND</title>
        <style> body { font-family: monospace; background-color: #9F9; color: brown } </style>
    </head>
    <body>
        <h1>Page Not Found!</h1>
    </body>
    </html>
  blue-index.html: |
    <head>
        <title>Nginx blue</title>
        <style> body { font-family: monospace; background-color: #99F; color: #333; } </style>
    </head>
    <body>
        <h1>Blue Application is working! ðŸ’™</h1>
    </body>
    </html>
  blue-404.html: |
    <head>
        <title>Nginx blue - PAGE NOT FOUND</title>
        <style> body { font-family: monospace; background-color: #99F; color: brown } </style>
    </head>
    <body>
        <h1>Page Not Found!</h1>
    </body>
    </html>
---
# nginx green
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-green
  namespace: oci-lb-ingress-example
spec:
  selector:
    matchLabels:
      app: nginx-green
  replicas: 1
  template:
    metadata:
      labels:
        app: nginx-green
    spec:
      containers:
        - name: nginx-green
          image: nginx
          resources:
            requests:
              cpu: 50m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 200Mi
          ports:
            - containerPort: 80
          volumeMounts:
            - name: html-config-volume
              mountPath: /usr/share/nginx/html
            - name: nginx-config-volume
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: default.conf
      volumes:
        - name: html-config-volume
          configMap:
            name: nginx-configs
            items:
              - key: green-index.html
                path: index.html
              - key: green-404.html
                path: 404.html
        - name: nginx-config-volume
          configMap:
            name: nginx-configs
            items:
              - key: default.conf
                path: default.conf
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-green
  namespace: oci-lb-ingress-example
  labels:
    app: nginx-green
spec:
  type: NodePort
  ports:
    - port: 80
      protocol: TCP
  selector:
    app: nginx-green

---
# nginx next
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-blue
  namespace: oci-lb-ingress-example
spec:
  selector:
    matchLabels:
      app: nginx-blue
  replicas: 1
  template:
    metadata:
      labels:
        app: nginx-blue
    spec:
      containers:
        - name: nginx-blue
          image: nginx
          resources:
            requests:
              cpu: 50m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 200Mi
          ports:
            - containerPort: 80
          volumeMounts:
            - name: html-config-volume
              mountPath: /usr/share/nginx/html
            - name: nginx-config-volume
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: default.conf
      volumes:
        - name: html-config-volume
          configMap:
            name: nginx-configs
            items:
              - key: blue-index.html
                path: index.html
              - key: blue-404.html
                path: 404.html
        - name: nginx-config-volume
          configMap:
            name: nginx-configs
            items:
              - key: default.conf
                path: default.conf
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-blue
  namespace: oci-lb-ingress-example
  labels:
    app: nginx-blue
spec:
  type: NodePort
  ports:
    - port: 80
      protocol: TCP
  selector:
    app: nginx-blue
---
# http-test
# https://hub.docker.com/r/traefik/whoami
apiVersion: apps/v1
kind: Deployment
metadata:
  name: http-test
  namespace: oci-lb-ingress-example
spec:
  selector:
    matchLabels:
      app: http-test
  replicas: 1 # tells deployment to run 2 pods matching the template
  template:
    metadata:
      labels:
        app: http-test
    spec:
      containers:
        - name: traefik-whoami
          resources:
            requests:
              cpu: 50m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 200Mi
          image: traefik/whoami
          env:
            - name: WHOAMI_NAME
              value: oci-lb-ingress-http-test
            - name: WHOAMI_PORT_NUMBER
              value: "3000"
          ports:
            - containerPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: http-test
  namespace: oci-lb-ingress-example
  labels:
    app: http-test
spec:
  type: NodePort
  ports:
    - port: 3000
      targetPort: 3000
  selector:
    app: http-test
---
# INGRESS
# apiVersion: networking.k8s.io/v1beta1
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: example-ingress
  namespace: oci-lb-ingress-example
  annotations:
    # kubernetes.io/ingress.class: "oci"
    # Below configurations are convered by OCI free tier
    # https://www.oracle.com/in/cloud/free/#always-free
    ingress.beta.kubernetes.io/oci-load-balancer-shape: "flexible"
    ingress.beta.kubernetes.io/oci-load-balancer-shape-flex-min: "10"
    ingress.beta.kubernetes.io/oci-load-balancer-shape-flex-max: "10"

    # ingress.beta.kubernetes.io/oci-load-balancer-subnet1: ocid1.subnet.oc1.ap-sydney-1.aaaaaaaaaaaaaaaaaa
spec:
  ingressClassName: oci
  tls:
    - hosts:
        - www.example.test
        - next.example.test
      secretName: ingress-example-tls-cert
  rules:
    - host: www.example.test
      http:
        paths:
          #  returns the whoami information as JSON.
          - path: /api
            pathType: Exact
            backend:
              service:
                name: http-test
                port:
                  number: 3000

          # serve pages from ngix-www
          - path: /
            pathType: Prefix
            backend:
              # serviceName: nginx
              # servicePort: 80
              service:
                name: nginx-green
                port:
                  number: 80
      http:
        paths:
          # websocket echo
          - path: /echo
            pathType: Exact
            backend:
              service:
                name: http-test
                port:
                  number: 3000

          # /data?size=n[&unit=u]: creates a response with a size n. The unit of measure, if specified,
          #accepts the following values: KB, MB, GB, TB (optional, default: bytes).
          - path: /data
            pathType: Exact
            backend:
              service:
                name: http-test
                port:
                  number: 3000

          # heath check
          #     GET, HEAD, ...: returns a response with the status code defined by the POST
          #     POST: changes the status code of the GET (HEAD, ...) response.
          - path: /health
            pathType: Exact
            backend:
              service:
                name: http-test
                port:
                  number: 3000

    - host: next.example.test
      http:
        paths:
          #  returns the whoami information as JSON.
          - path: /api
            pathType: Exact
            backend:
              service:
                name: http-test
                port:
                  number: 3000

          # serve pages from ngix-blue
          - path: /
            pathType: Prefix
            backend:
              service:
                name: nginx-blue
                port:
                  number: 80

